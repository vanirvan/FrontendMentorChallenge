---
interface Props {
  level: number;
}

const { level } = Astro.props;

const levelToText = (level: number) => {
  switch (level) {
    case 1:
      return "newbie";
    case 2:
      return "junior";
    case 3:
      return "intermediate";
    case 4:
      return "advanced";
    case 5:
      return "guru";
    default:
      throw Error;
  }
};
---

<div class="font-barlow">
  <span
    class={`border inline-flex justify-center overflow-hidden rounded-lg ${level == 1 ? "border-difficulty-1" : level == 2 ? "border-difficulty-2" : level == 3 ? "border-difficulty-3" : level == 4 ? "border-difficulty-4" : "border-difficulty-5"}`}
    ><span
      class={`py-0 px-3 text-white text-[1.4rem] font-bold leading-6 m-0 ${level == 1 ? "bg-difficulty-1" : level == 2 ? "bg-difficulty-2" : level == 3 ? "bg-difficulty-3" : level == 4 ? "bg-difficulty-4" : "bg-difficulty-5"}`}
      >{level}</span
    ><span
      class={`py-0 px-3 bg-transparent text-[1.4rem] font-bold leading-6 m-0 uppercase ${level == 1 ? "text-difficulty-1" : level == 2 ? "text-difficulty-2" : level == 3 ? "text-difficulty-3" : level == 4 ? "text-difficulty-4" : "text-difficulty-5"}`}
      >{levelToText(level)}</span
    ></span
  >
</div>
